{
    // Configure hostname to announce to the network. Must be a FQDN pointing to this node.
    // Possible values: any fully-qualified domain name.
    host: "my.domain",

    // Specifies which port to listen on for connections.
    // Possible values: any valid port number
    // Default: 8443.
    //port: 8443,

    // Certificate file and private key file to use for the TLS secured server.
    tls: {
        cert: "./my.domain.cer",
        key: "./my.domain.key"
    },

    // Set up a dumb node. Other nodes will not be able to connect to this node, but you may connect to others.
    // Obsoletes TLS and hostname configuration.
    // Possible values: "no", "yes"
    // Default: "no"
    //dumb: "no",

    // Specify the type of node to run.
    // Possible values: "full", "light", "nano"
    // Default: "full"
    //type: "full",

    // Specify the network to connect to.
    // Possible values: "main", "test", "dev", "bounty"
    // Default: "main"
    //network: "test",

    // Run in passive mode: do not connect to other peers and wait for them to connect to you.
    // Possible values: "no", "yes"
    // Default: "no"
    //passive: "yes",

    // Print statistics like mining hashrate, current account balance and mempool size
    // Possible values: the time interval (in seconds) between statistics, or 0 to disable
    // Default: 0
    //statistics: 60,

    // Configure the miner on this node.
    miner: {
        // Activate mining on this node.
        // Possible values "no", "yes"
        // Default "no"
        //enabled: "yes",

        // Number of threads to use for mining. Set to "auto" to automatically use number of cores
        // of the device's processor.
        // Possible values: "auto", any number of threads
        // Default: "auto"
        //threads: 1,

        //throttleAfter: Infinity,
        //throttleWait: 100,

        //extraData: "miner name"
    },

    poolMining: {
      enabled: "yes",

      mode: "smart",

      host: "192.168.1.11",

      port: 8444
    }

    // Configure the JSON-RPC server.
    rpcServer: {
        // Start the JSON-RPC server.
        // Possible values "no", "yes"
        // Default "no"
        //enabled: "yes",

        // TCP-Port to use to create a listening socket for the JSON-RPC server.
        // Possible values: any valid port number
        // Default: 8648
        //port: 8648,

        // Allow Cross-Origin access to the JSON-RPC server from the specified origins.
        // Default: []
        //corsdomain: [],

        // Declare a username and password required to access the JSON-RPC server.
        // Default: none
        //username: "super",
        // Default: none
        //password: "secret",
    },

    // Configure Prometheus-compatible metrics server.
    metricsServer: {
        // Start the metrics server.
        // Possible values "no", "yes"
        // Default "no"
        //enabled: "yes",

        // TCP-Port to use to create a listening socket for the metrics server.
        // Possible values: any valid port number
        // Default: 8649
        //port: 8649,

        // Declare a password required to access the metrics server.
        // Default: none
        //password: "secret",
    },

    // Specify the wallet to use.
    wallet: {
        // Use a wallet initialized from a wallet seed.
        // Default: none
        //seed: "seed",

        // Use a wallet by it's address. The specified wallet cannot be used to sign transactions.
        // Default: none
        //address: "NQ42 XX...",
    },

    // Configure log output. All output will go to STDOUT.
    log: {
        // Configure global log level.
        // Possible values: "trace", "verbose", "debug", "info", "warning", "error", "assert"
        // Default: "info"
        //level: "verbose",

        // Define specific log levels for tags
        // Default: none
        //tags: {"BaseConsensus": "debug"},
    },

    // Configure additional seed peers
    seedPeers: [
        // Details of additional seed node.
        // - host: the hostname of the websocket server to connect to.
        // - port: the port that the nimiq node runs on.
        // - publicKey (optional): the public part of the peer key of this seed node. Should always be set if the node
        //                         is accessed via the internet.
        //{host: 'new-seed.nimiq.com', port: 8080, publicKey: 'e65e39616662f2c16d62dc08915e5a1d104619db8c2b9cf9b389f96c8dce9837'},
        //{host: 'nimiq-seed.company-network.int', port: 8080},
    ],
}
